apply plugin: 'com.android.application'
apply plugin: 'androidsvgdrawable'

android {
    namespace 'pw.thedrhax.mosmetro'
    compileSdkVersion 31

    defaultConfig {
        applicationId 'pw.thedrhax.mosmetro'
        minSdkVersion 16
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 25
        versionCode 77
        versionName "2.3.2"

        // Jenkins build info
        def branch_name = System.getenv("BRANCH_NAME") ?: "play"
        buildConfigField "String", "BRANCH_NAME", "\"$branch_name\""
        buildConfigField "Integer", "BUILD_NUMBER", System.getenv("BUILD_NUMBER") ?: "0"
        resValue "string", "build_branch_name", "\"$branch_name\""

        buildConfigField "String", "API_URL_DATA", "\"https://raw.githubusercontent.com/mosmetro-android/builds/data/data.json\""
        buildConfigField "String", "API_URL_STATS", "\"https://mosmetro.duckdns.org/api/v2/stats\""

        // Required when setting minSdkVersion to 20 or lower
        multiDexEnabled true
    }

    compileOptions {
        // Flag to enable support for the new language APIs, needs multiDex
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    if (keystorePropertiesFile.exists()) {
        def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

        signingConfigs {
            release {
                storeFile new File(keystoreProperties['RELEASE_STORE_FILE'])
                storePassword keystoreProperties['RELEASE_STORE_PASSWORD']
                keyAlias keystoreProperties['RELEASE_KEY_ALIAS']
                keyPassword keystoreProperties['RELEASE_KEY_PASSWORD']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
        }
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res', 'build/generated/res/main']
            jniLibs.srcDirs = ['libs']
            java {
                srcDir 'src'
            }
        }
    }

    lint {
        abortOnError false
    }
}

import fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask
task svgToDrawablePng(type: SvgDrawableTask) {
    from = files('src/main/res-svg/drawable')
    to = file('build/generated/res/main')
    createMissingDirectories = true
    targetedDensities = ['ldpi', 'hdpi', 'mdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    outputFormat = 'PNG'
    outputType = 'drawable'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.work:work-runtime:2.7.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.squareup.okhttp3:okhttp:3.12.13'
    implementation 'org.jsoup:jsoup:1.8.3'
    implementation ('com.googlecode.json-simple:json-simple:1.1.1') {
        exclude module: 'junit'
    }
    implementation 'com.edmodo:rangebar:1.0.0'
    implementation 'dnsjava:dnsjava:2.1.9'
    implementation 'com.jayway.jsonpath:json-path:2.6.0'
    implementation 'com.github.topjohnwu.libsu:core:3.1.2'
    implementation 'io.sentry:sentry-android-core:6.6.0'

    // https://developer.android.com/studio/write/java8-support#library-desugaring-versions
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.0'
}

/*
 * Compatibility with Eclipse and Visual Studio Code
 */

apply plugin: 'com.greensopinion.gradle-android-eclipse'
apply plugin: 'eclipse'

buildscript {
    dependencies {
        classpath fileTree(dir: 'libs', includes: ['gradle-android-eclipse-1.1.1.jar'])
    }
}

// https://github.com/greensopinion/gradle-android-eclipse/issues/9
configurations {
    eclipseConfig.extendsFrom implementation
    eclipseTestConfig.extendsFrom testImplementation
}

eclipse {
    classpath {
        plusConfigurations += [
            configurations.implementation,
            configurations.testImplementation,
            configurations.eclipseConfig,
            configurations.eclipseTestConfig,
        ]
        downloadSources = true
    }
}